1.maven构建阿里云仓库镜像需要2个步骤：
  a.maven登录阿里云Docker Registry
  b.maven push到阿里仓库

2.maven登录阿里云Docker Registry
  在 apache-maven-3.0.5\conf\settings.xml配置文件中配置以下内容：
	<server>
      <!--maven的pom中可以根据这个id找到这个server节点的配置-->  
      <id>docker-aliyun</id>
      <!--这里是在阿里云注册的账号-->
      <username>agan</username>
      <!--这里是在阿里云注册的密码-->
      <password>agan</password>
      <configuration>
	      <!--这是在阿里云注册时填写的邮箱-->
	      <email>393847237@qq.com</email>
      </configuration>
	</server>
	

3.maven push到阿里仓库

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- 添加docker maven插件 -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.1.1</version>
				<!--docker镜像相关的配置信息 -->
				<configuration>
					<!-- 与maven配置文件settings.xml中配置的server.id一致，用于推送镜像 -->
					<serverId>docker-aliyun</serverId>
					<!--私有仓库地址 -->
					<registryUrl>registry.cn-shenzhen.aliyuncs.com</registryUrl>
					<!--镜像名，这里用工程名 -->
					<imageName>registry.cn-shenzhen.aliyuncs.com/agan/${project.artifactId}:${project.version}</imageName>
					<!-- 指定基础镜像 类似dockerfile的FROM指令 -->
					<baseImage>java:8</baseImage>
					<!-- 配置容器启动后，执行什么命令，等于与 dockerfile的ENTRYPOINT -->
					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
					<!-- 为dockerde tag指定版本号、latest -->
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<!-- 是否有push的功能 true代表有 -->
					<pushImage>true</pushImage>
					<!-- push后是否覆盖已存在的标签镜像 -->
					<forceTags>true</forceTags>
					<!-- 复制jar包到docker容器指定的目录 -->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<!-- 指定要复制jar包的根目录，${project.build.directory}代表 target的目录 -->
							<directory>${project.build.directory}</directory>
							<!-- 指定要复制的文件，${project.build.finalName}代表打包后的jar -->
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>

4.执行命令：
clean package -DskipTests docker:build

