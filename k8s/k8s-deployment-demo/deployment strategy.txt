策略 
.spec.strategy 策略指定用于用新 Pods 替换旧 Pods 的策略。 
.spec.strategy.type 可以是 “Recreate” 或 “RollingUpdate”。“RollingUpdate” 是默认值。

重新创建 Deployment 
如果 .spec.strategy.type==Recreate，在创建新 Pods 之前，所有现有的 Pods 会被杀死。

滚动更新 Deployment 
Deployment 会在 .spec.strategy.type==RollingUpdate时，采取 滚动更新的方式更新 Pods。
你可以指定 maxUnavailable 和 maxSurge 来控制滚动更新 过程。

maxUnavailable(最大不可用) 
.spec.strategy.rollingUpdate.maxUnavailable 是一个可选字段，用来指定 更新过程中不可用的 Pod 的个数上限。
该值可以是绝对数字（例如，5），也可以是 所需 Pods 的百分比（例如，10%）。
百分比值会转换成绝对数并去除小数部分。

比如replicas=3,  maxUnavailable=50%, 3 * 0.5 = 1.5，除去小数
部分就是1，那么在滚动更新时，会保留3-1=2个pod可以正常访问。
滚动更新开始时会立即将旧 ReplicaSet 缩容到期望 Pod 个数的1-50%=50%。 
新 Pod 准备就绪后，可以继续缩容旧有的 ReplicaSet，然后对新的 ReplicaSet 扩容，
确保在更新期间 可用的 Pods 总数在任何时候都至少为所需的 Pod 个数的 50%。

如果 .spec.strategy.rollingUpdate.maxSurge 为 0，则此值不能为 0。 默认值为 25%。

maxSurge(最大峰值)
.spec.strategy.rollingUpdate.maxSurge 是一个可选字段，用来指定可以创建的超出 期望 Pod 个数的 Pod 数量。
此值可以是绝对数（例如，5）或所需 Pods 的百分比（例如，10%）。 
如果 MaxUnavailable 为 0，则此值不能为 0。百分比值会通过向上取整转换为绝对数。 此字段的默认值为 25%。

例如，当此值为 30% 时，启动滚动更新后，会立即对新的 ReplicaSet 扩容，
同时保证新旧 Pod 的总数不超过所需 Pod 总数的 130%。一旦旧 Pods 被杀死，
新的 ReplicaSet 可以进一步扩容， 同时确保更新期间的任何时候运行中的 Pods 总数最多为所需 Pods 总数的 130%。

进度期限秒数 
.spec.progressDeadlineSeconds 是一个可选字段，用于指定系统在报告 Deployment 进展失败之前
等待 Deployment 取得进展的秒数。 这类报告会在资源状态中体现为 Type=Progressing、Status=False、 Reason=ProgressDeadlineExceeded。
Deployment 控制器将持续重试 Deployment。 
将来，一旦实现了自动回滚，Deployment 控制器将在探测到这样的条件时立即回滚 Deployment。
如果指定，则此字段值需要大于 .spec.minReadySeconds 取值。

最短就绪时间 
.spec.minReadySeconds 是一个可选字段，用于指定新创建的 Pod 在没有任意容器崩溃情况下的最小就绪时间， 
只有超出这个时间 Pod 才被视为可用。默认值为 0（Pod 在准备就绪后立即将被视为可用）。 
要了解何时 Pod 被视为就绪，可参考容器探针（liveness probe、readness probe）。