1. Deployment只能用于无状态应用的编排，而StatefulSet用于有状态应用的编排

2. StatefulSet把现实世界中的“有状态应用”分为两类：
	1).拓扑状态：即应用多个实例之间的关系不对等，比如POD A要先于POD B启动。删除AB两个POD，那么恢复时，也必须先A后B
	2).存储状态。POD A读取到的存储数据，哪怕过了10分钟后，甚至POD被重新创建过，也能读取到同样路径的数据
StatefulSet就是记录下这些状态，以便POD重建时能恢复这些状态


3.  "Normal Service"和"Headless Service“的应用场景是什么？
“Headless Service不需要分配一个 VIP，而是可以直接以 DNS 记录的方式解析出被代理 Pod 的 IP 地址”，同时由于其编号的严格规定，会按照编号顺序完成创建工作。
如果在部署StatefulSet的时候，必须使用"Headless Service" ，而不是"Normal Service”。


4.
$ kubectl create -f statefulset-demo.yaml
$ kubectl get service nginx
NAME      TYPE         CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
nginx     ClusterIP    None         <none>        80/TCP    10s
$ kubectl get statefulset web
NAME      DESIRED   CURRENT   AGE
web       2         1         19s



$ kubectl get pods -w -l app=nginx
NAME      READY     STATUS    RESTARTS   AGE
web-0     0/1       Pending   0          0s
web-0     0/1       Pending   0         0s
web-0     0/1       ContainerCreating   0         0s
web-0     1/1       Running   0         19s
web-1     0/1       Pending   0         0s
web-1     0/1       Pending   0         0s
web-1     0/1       ContainerCreating   0         0s
web-1     1/1       Running   0         20s

可见，这些POD的创建是严格按照顺序进行的，web-0进入Running状态后，web-1才开始创建。