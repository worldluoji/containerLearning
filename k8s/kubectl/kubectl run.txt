k8s kubectl run命令使用详解
创建并运行一个指定的可复制的镜像。 创建一个deployment或者job来管理创建的容器。
使用方法：
kubectl run NAME --image=image [--env="key=value"] [--port=port] [--replicas=replicas] [--dry-run=bool] 
[--overrides=inline-json] [--command] -- [COMMAND] [args...]

示例：
#创建一个名为ns的namespace，并创建一个名为cache的pod, 使用lfccncf/redis镜像，tag为3-alpine，
#其namesapce为之前创建好的ns,对外暴露6379端口，如果退出不会重启
kubectl create ns core 
kubectl run cache --image=lfccncf/redis:3-alpine -n core --restart=Never --port=6379

# 运行一个 hazelcast 单个实例，并设置容器的环境变量"DNS_DOMAIN=cluster" and "POD_NAMESPACE=default"。
kubectl run hazelcast --image=hazelcast --env="DNS_DOMAIN=cluster" --env="POD_NAMESPACE=default"

# 启动一个 replicated 实例去复制 nginx。
kubectl run nginx --image=nginx --replicas=5

# 试运行。不创建他们的情况下，打印出所有相关的 API 对象。
kubectl run nginx --image=nginx --dry-run

# 用可解析的 JSON 来覆盖加载 `deployment` 的 `spec`，来运行一个 nginx 单个实例。
kubectl run nginx --image=nginx --overrides='{ "apiVersion": "v1", "spec": { ... } }'

# 运行一个在前台运行的 busybox 单个实例，如果退出不会重启。
kubectl run -i --tty busybox --image=busybox --restart=Never

参考：http://kubernetes.kansea.com/docs/user-guide/kubectl/kubectl_run/

实战：
kubectl run tmp --restart=Never --rm -i --image=nginx:alpine -- curl -m 5 10.12.2.15
(curl -m, --max-time SECONDS设置最大传输时间)

kubectl run tmp --restart=Never --rm --image=busybox -i -- wget -O- 10.12.2.15

以上两种方法都可以看10.12.2.15服务器的80端口是否通，前一个使用镜像nginx:alpine, 使用了curl；
后一个使用镜像busybox, 使用的是wget.
 -i, --stdin=false: Keep stdin open on the container(s) in the pod, even if
nothing is attached

t, --tty=false: Allocated a TTY for each container in the pod.
      --wait=false: If true, wait for resources to be gone before returning.

--rm=false: If true, delete resources created in this command for attached containers.


kubectl run test --restart=Never -i --rm --image=nginx:alpine -- curl -m 5  manager-api-svc.mars:4444

测试网络连通性可以用manager-api-svc.mars， 即serviceName.namespace的形式